// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  isActive  Boolean  @default(true)
  roles     String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignments assignments[]
}

model roles {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role_permissions role_permissions[]
}

model permissions {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  contentType String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role_permissions role_permissions[]
}

model role_permissions {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  roleId       String      @db.ObjectId
  permissionId String      @db.ObjectId
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  role         roles        @relation(fields: [roleId], references: [id])
  permission   permissions  @relation(fields: [permissionId], references: [id])
}

model queues {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  assignments assignments[]
  queue_items     queue_items[]
}

model priorities {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  level       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model assignments {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  queueId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      users      @relation(fields: [userId], references: [id])
  queue     queues     @relation(fields: [queueId], references: [id])

  terminals terminals[]
}

model terminals{
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  assignedToId String  @db.ObjectId
  name      String
  isActive  Boolean

  assignment   assignments  @relation(fields: [assignedToId], references: [id])
}

model queue_items {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  queueId      String   @db.ObjectId
  title        String
  description  String?
  priority     Int
  status       String
  history      Json[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  queue        queues        @relation(fields: [queueId], references: [id])
}